{
    "version": 3,
    "terraform_version": "0.11.10",
    "serial": 4,
    "lineage": "c28bb453-8804-44a5-9685-9a00aa54ab2a",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "instance_url": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://54.154.252.74:8080"
                },
                "web_ec2_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "i-07d5657ee28ee32b2"
                    ]
                },
                "web_security_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-02e5d7abe5584511d"
                }
            },
            "resources": {
                "aws_instance.web": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_security_group.web_security_group",
                        "data.template_file.user_data"
                    ],
                    "primary": {
                        "id": "i-07d5657ee28ee32b2",
                        "attributes": {
                            "ami": "ami-00035f41c82244dab",
                            "arn": "arn:aws:ec2:eu-west-1:100474908317:instance/i-07d5657ee28ee32b2",
                            "associate_public_ip_address": "true",
                            "availability_zone": "eu-west-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-07d5657ee28ee32b2",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "Terratest_key",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-00169689227f1eecb",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-00169689227f1eecb",
                            "private_dns": "ip-172-31-18-201.eu-west-1.compute.internal",
                            "private_ip": "172.31.18.201",
                            "public_dns": "ec2-54-154-252-74.eu-west-1.compute.amazonaws.com",
                            "public_ip": "54.154.252.74",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0c773211d267df490",
                            "root_block_device.0.volume_size": "30",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "1",
                            "security_groups.4147055386": "me-test-me-SG",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-2f91f767",
                            "tags.%": "6",
                            "tags.Name": "me-test-me-ec2-0",
                            "tags.environment": "test",
                            "tags.owner": "me",
                            "tags.project": "me",
                            "tags.role": "aws instance for public web",
                            "tags.sqs_region": "me",
                            "tenancy": "default",
                            "user_data": "d788d6710b416ed4c5558747c52d7b36b76cb627",
                            "volume_tags.%": "6",
                            "volume_tags.Name": "me-test-me-ec2-0",
                            "volume_tags.environment": "test",
                            "volume_tags.owner": "me",
                            "volume_tags.project": "me",
                            "volume_tags.role": "aws instance volume for public web",
                            "volume_tags.sqs_region": "me",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.3892358869": "sg-02e5d7abe5584511d"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.web_security_group": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-02e5d7abe5584511d",
                        "attributes": {
                            "arn": "arn:aws:ec2:eu-west-1:100474908317:security-group/sg-02e5d7abe5584511d",
                            "description": "security group for me-test-me",
                            "egress.#": "1",
                            "egress.651680083.cidr_blocks.#": "1",
                            "egress.651680083.cidr_blocks.0": "0.0.0.0/0",
                            "egress.651680083.description": "Allow All traffic to Internet",
                            "egress.651680083.from_port": "0",
                            "egress.651680083.ipv6_cidr_blocks.#": "0",
                            "egress.651680083.prefix_list_ids.#": "0",
                            "egress.651680083.protocol": "-1",
                            "egress.651680083.security_groups.#": "0",
                            "egress.651680083.self": "false",
                            "egress.651680083.to_port": "0",
                            "id": "sg-02e5d7abe5584511d",
                            "ingress.#": "2",
                            "ingress.1302607612.cidr_blocks.#": "1",
                            "ingress.1302607612.cidr_blocks.0": "80.76.207.49/32",
                            "ingress.1302607612.description": "Allow TCP/8080 access from Whitelisted IPs",
                            "ingress.1302607612.from_port": "8080",
                            "ingress.1302607612.ipv6_cidr_blocks.#": "0",
                            "ingress.1302607612.prefix_list_ids.#": "0",
                            "ingress.1302607612.protocol": "tcp",
                            "ingress.1302607612.security_groups.#": "0",
                            "ingress.1302607612.self": "false",
                            "ingress.1302607612.to_port": "8080",
                            "ingress.2826091949.cidr_blocks.#": "1",
                            "ingress.2826091949.cidr_blocks.0": "80.76.207.49/32",
                            "ingress.2826091949.description": "Allow (RDP)TCP/3389 access from Whitelisted IPs",
                            "ingress.2826091949.from_port": "3389",
                            "ingress.2826091949.ipv6_cidr_blocks.#": "0",
                            "ingress.2826091949.prefix_list_ids.#": "0",
                            "ingress.2826091949.protocol": "tcp",
                            "ingress.2826091949.security_groups.#": "0",
                            "ingress.2826091949.self": "false",
                            "ingress.2826091949.to_port": "3389",
                            "name": "me-test-me-SG",
                            "owner_id": "100474908317",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "6",
                            "tags.Name": "me-test-me-SG",
                            "tags.environment": "test",
                            "tags.owner": "me",
                            "tags.project": "me",
                            "tags.region": "me",
                            "tags.role": "aws instance for public web",
                            "vpc_id": "vpc-73e8cd15"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.user_data": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e57134c0448577c35774c31e3428ba9b8c7bf7514949f9189b81a3803a480f9e",
                        "attributes": {
                            "id": "e57134c0448577c35774c31e3428ba9b8c7bf7514949f9189b81a3803a480f9e",
                            "rendered": "#!/bin/bash\r\n# This script is meant to be run in the User Data of an EC2 Instance while it's booting. It starts a simple\r\n# \"Hello, World\" web server.\r\n\r\nset -e\r\n\r\n# Send the log output from this script to user-data.log, syslog, and the console\r\n# From: https://alestic.com/2010/12/ec2-user-data-output/\r\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# The variables below are filled in using Terraform interpolation\r\necho \"Hello, World!\" \u003e index.html\r\nnohup busybox httpd -f -p \"8080\" \u0026",
                            "template": "#!/bin/bash\r\n# This script is meant to be run in the User Data of an EC2 Instance while it's booting. It starts a simple\r\n# \"Hello, World\" web server.\r\n\r\nset -e\r\n\r\n# Send the log output from this script to user-data.log, syslog, and the console\r\n# From: https://alestic.com/2010/12/ec2-user-data-output/\r\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# The variables below are filled in using Terraform interpolation\r\necho \"${instance_text}\" \u003e index.html\r\nnohup busybox httpd -f -p \"${instance_port}\" \u0026",
                            "vars.%": "2",
                            "vars.instance_port": "8080",
                            "vars.instance_text": "Hello, World!"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
